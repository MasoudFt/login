Sign up Component


import React from 'react'
import { Button,Badge,Form } from 'react-bootstrap';
import { useState} from 'react'
import axios from 'axios'
import { useNavigate } from "react-router-dom";
import Swal from 'sweetalert2';
import { Alert } from '@mui/material';




const Signup = () => {
  const [ user, setUser ] = useState({
    name: "",
    email: "",
    password: "",
    confirmpassword:"",
    mobile:""
    });
   
  const [userTokenInf,setUserTokenInf]=useState([]);
  const [error, setError] = useState("");

// console.log(userTokenInf)

  const emailvalidation = () =>{
    if(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(user.email)){
      console.log("Email correct")
      
    }else{
      Swal.fire({
        icon: 'error',
        title: 'email isnot valid',
        footer:"Insert @,(.com,.co,...)"
    })}}
    const passValidiation = () => {
      if (/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/.test(user.password)) {

          console.log("password is valid")
      } else {
          console.log("password isn't valid")
          Swal.fire({
              icon: 'error',
              title: 'password isnot valid',
          })
      }

  }
  const mobileValidation=()=>{
    if(/^([+]\d{2})?\d{11}$/.test(user.mobile)){
      console.log("Mobile is valid")
    }else{
      console.log("Mobile isn`t valid")
      Swal.fire({
        icon: 'error',
        title: 'Mobile isn`t valid',
      })
    }
  }
  const nameValidation=()=>{
    if(user.name.length){
      console.log("name is valid")
    }else{
      console.log("name isn`t valid")
      Swal.fire({
        icon: 'warning',
        title: 'Please Enter Youre Name ',
      })
    }
  }
 
  const navigate=useNavigate()
  const postUser=async()=>{
    // console.log("useName:" + user.name)
    console.log("userEmail:" + user.email)
    console.log("userPass:" + user.password)
    // console.log("usermobile:" + user.mobile)
    try {
        
      const {data}= await axios.post("http://kzico.runflare.run/user/signup" , 
      { 
        username: user.name,
        email: user.email,
        password: user.password,
        mobile: user.mobile
       
        
      })
      console.log(data)

       setUserTokenInf((last)=>[...last,data.user.token])

       
  } catch (error) {
    console.log(error)
      setError(error.response.data.message)
    
  }  
  
  }
  return (
    <>
   
            <form onSubmit={(e)=>e.preventDefault}>
   
    <div className='Sign'> 
    {error.length?
    <Alert 
    severity='error'
    
    >{error}
    </Alert>
           
                :
                
           <Badge  className='iii' bg="success"  style={{width:"370px",height:"50px",paddingTop:"15px",margin:"15px"
        ,fontSize:"20px"}}>Signup</Badge>
                }
                 
                <p className='Sname'>Name:</p>
                <input style={{width:"300px",marginTop:"-3px"}} onChange={(e)=>setUser({...user, name: e.target.value})}
                 className='input' type="text" placeholder='enter youre name'></input>
                     {user.name.length?
                     user.name.length<5?
                     <Alert style={{marginTop:"15px"}} severity="warning">Letter name must be more than 5 correcter</Alert>
                     :
                     ""
                     :
                     ""

                    }
                <p className='name'>Email:</p>
                <input style={{width:"300px",marginTop:"-3px"}} onChange={(e)=>{setUser({...user, email: e.target.value})}}
                 className='input' value={user.email} type="email" placeholder='enter youre Email' 
                 />
                <p className='name'>Password:</p>
                <input style={{width:"300px",marginTop:"-3px"}} onChange={(e)=>setUser({...user,password: e.target.value})}
                 className='input' type="password" placeholder='enter youre password'></input>
                 {user.password.length?
                 user.password.length<8?
                 <Alert severity="error"><h4>Password must be:</h4>
                 Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character
                 </Alert>
                 :
                 ""
                 :
                 ""

                 }
                  <p className='name'>ConfirmPassword:</p>
                <input style={{width:"300px",marginTop:"-3px"}} onChange={(e)=>setUser({...user,confirmpassword: e.target.value})}
                 className='input' type="password" placeholder='enter youre password'></input>
                        {user.confirmpassword.length?
                       user.confirmpassword===user.password?
                       ""
                          :
                          <>
                               <Alert style={{marginTop:"15px"}} severity="warning">password incorrect</Alert>
                          </>
                          :
                          ""
                    }
                  <p className='name'>Mobile:</p>
                <input style={{width:"300px",marginTop:"-3px"}} onChange={(e)=>setUser({...user,mobile: e.target.value})}
                 className='input' type="number"  ></input>
                    {user.mobile.length?
                    user.mobile.length<11?
                     <Alert style={{marginTop:"15px"}} severity="warning">Correct Pattern:09121234567</Alert>
                     :
                     ""
                     :
                     ""

                    }
                <Button
                 onClick={()=>{
                  if(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(user.email)
                  &&user.name.length
                  &&user.password.length===user.confirmpassword.length
                  &&/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/.test(user.password)
                  && /^([+]\d{2})?\d{11}$/.test(user.mobile))
                  {
                  postUser();
                  navigate("/Login")
                  }else{
                    mobileValidation();
                    passValidiation();
                    emailvalidation();
                    nameValidation();
                  }
                   }}
                 variant="dark" className='iii' size="mb" style={{marginTop:"30px", fontSize:"20px",marginLeft:"125px"}}>
                Signup
                </Button>
           
        </div>
            </form>
        </> 
  )
}

export { Signup};
